{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Natan/Desktop/Project 4/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from './../../environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  getAllProducts() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const observable = _this.http.get(environment.productsUrl + \"get-all-products\");\n\n      const products = yield firstValueFrom(observable);\n      return products;\n    })();\n  }\n\n  searchProduct(name) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const observable = _this2.http.get(environment.productsUrl + \"search-product/\" + name);\n\n      const products = yield firstValueFrom(observable);\n      return products;\n    })();\n  }\n\n  getProductsByCategory(categoryId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const observable = _this3.http.get(environment.productsUrl + \"categoryId/\" + categoryId);\n\n      const products = yield firstValueFrom(observable);\n      return products;\n    })();\n  }\n\n}\n\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAAA,SAASA,WAAT,QAA4B,kCAA5B;AAGA,SAAqBC,cAArB,QAA2C,MAA3C;;;AAMA,OAAM,MAAOC,eAAP,CAAsB;EAE1BC,YAAoBC,IAApB,EAAoC;IAAhB;EAAqB;;EAE5BC,cAAc;IAAA;;IAAA;MACzB,MAAMC,UAAU,GAAG,KAAI,CAACF,IAAL,CAAUG,GAAV,CAA8BP,WAAW,CAACQ,WAAZ,GAA0B,kBAAxD,CAAnB;;MACA,MAAMC,QAAQ,SAASR,cAAc,CAACK,UAAD,CAArC;MACA,OAAOG,QAAP;IAHyB;EAI1B;;EACYC,aAAa,CAACC,IAAD,EAAa;IAAA;;IAAA;MACrC,MAAML,UAAU,GAAI,MAAI,CAACF,IAAL,CAAUG,GAAV,CAA8BP,WAAW,CAACQ,WAAZ,GAA0B,iBAA1B,GAA8CG,IAA5E,CAApB;;MACA,MAAMF,QAAQ,SAASR,cAAc,CAACK,UAAD,CAArC;MACA,OAAOG,QAAP;IAHqC;EAItC;;EAEcG,qBAAqB,CAACC,UAAD,EAAmB;IAAA;;IAAA;MACjD,MAAMP,UAAU,GAAG,MAAI,CAACF,IAAL,CAAUG,GAAV,CAA8BP,WAAW,CAACQ,WAAZ,GAA0B,aAA1B,GAA0CK,UAAxE,CAAnB;;MACA,MAAMJ,QAAQ,SAASR,cAAc,CAACK,UAAD,CAArC;MACA,OAAOG,QAAP;IAHiD;EAIpD;;AAnBuB;;;mBAAfP,iBAAeY;AAAA;;;SAAfZ;EAAea,SAAfb,eAAe;EAAAc,YAFd","names":["environment","firstValueFrom","ProductsService","constructor","http","getAllProducts","observable","get","productsUrl","products","searchProduct","name","getProductsByCategory","categoryId","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Natan\\Desktop\\Project 4\\Frontend\\src\\app\\services\\products.service.ts"],"sourcesContent":["import { environment } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, firstValueFrom } from 'rxjs';\r\nimport { ProductModel } from '../models/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  public async getAllProducts(): Promise<ProductModel[]> {\r\n    const observable = this.http.get<ProductModel[]>(environment.productsUrl + \"get-all-products\");\r\n    const products = await firstValueFrom(observable);\r\n    return products;\r\n  }\r\n  public async searchProduct(name: string): Promise<ProductModel[]> {\r\n    const observable =  this.http.get<ProductModel[]>(environment.productsUrl + \"search-product/\" + name);\r\n    const products = await firstValueFrom(observable);\r\n    return products;\r\n  }\r\n\r\n    public async getProductsByCategory(categoryId: string): Promise<ProductModel[]> {\r\n        const observable = this.http.get<ProductModel[]>(environment.productsUrl + \"categoryId/\" + categoryId);\r\n        const products = await firstValueFrom(observable);\r\n        return products;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}