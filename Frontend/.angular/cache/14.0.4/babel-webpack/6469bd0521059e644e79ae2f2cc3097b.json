{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Natan/Desktop/Project 4/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ProductModel } from 'src/app/models/product';\nimport { store } from 'src/app/redux/store';\nlet AdminComponent = class AdminComponent {\n  constructor(myProductsService, adminService, router) {\n    this.myProductsService = myProductsService;\n    this.adminService = adminService;\n    this.router = router;\n    this.product = new ProductModel();\n    this.categories = [];\n    this.newProduct = false;\n    this.editProduct = false;\n  }\n\n  ngOnInit() {\n    store.subscribe(() => {\n      this.user = store.getState().user;\n    });\n    this.myProductsService.getAllProducts().subscribe(res => this.products = res, err => alert(err.message));\n    this.adminService.getAllCategories().subscribe(res => this.categories = res, err => alert(err.message));\n  } // public addProduct(): void {\n  //     if (!this.product.img) {\n  //         alert('You have to upload image !');\n  //         return;\n  //     }\n  //     const myForm: FormData = new FormData();\n  //     myForm.append('image', this.product.img);\n  //     myForm.append('product', JSON.stringify(this.product));\n  //     this.adminService.addProduct(myForm)\n  //         .subscribe(res => {\n  //             this.products.push(res);\n  //             alert('product has been added !');\n  //             this.goBack();\n  //         }, err => alert(err.message));\n  // }\n\n\n  addProduct() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this.adminService.addProduct(_this.product);\n\n        alert('product has been added !');\n\n        _this.router.navigateByUrl(\"/admin\");\n      } catch (err) {\n        alert(err.message);\n      }\n    })();\n  }\n\n  updateImg(event) {\n    this.product.img = event.target.files[0];\n  }\n\n  goToEditProduct(_id) {\n    this.editProduct = true;\n    const selectedProduct = this.products.find(p => p._id === _id);\n    this.product = selectedProduct;\n  }\n\n  goToAddProduct() {\n    this.newProduct = true;\n  }\n\n  updateProduct() {\n    const myForm = new FormData();\n    myForm.append('image', this.product.img);\n    myForm.append('product', JSON.stringify(this.product));\n    this.adminService.updateProduct(myForm).subscribe(res => {\n      const index = this.products.findIndex(product => product._id === res._id);\n      this.products[index] = res;\n      alert('product has been updated!');\n      this.goBack();\n    }, err => alert(err.message));\n  }\n\n  goBack() {\n    this.newProduct = false;\n    this.editProduct = false;\n    this.product = new ProductModel();\n  }\n\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductModel","store","AdminComponent","constructor","myProductsService","adminService","router","ngOnInit","subscribe","user","getState","getAllProducts","res","products","err","alert","message","getAllCategories","categories","addProduct","product","navigateByUrl","updateImg","event","img","target","files","goToEditProduct","_id","editProduct","selectedProduct","find","p","goToAddProduct","newProduct","updateProduct","myForm","FormData","append","JSON","stringify","index","findIndex","goBack","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Natan\\Desktop\\Project 4\\Frontend\\src\\app\\components\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'src/app/models/user';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { ProductModel } from 'src/app/models/product';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { store } from 'src/app/redux/store';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n    public user: UserModel;\n    public products: ProductModel[];\n    public product: ProductModel = new ProductModel();\n    public categories: any = [];\n    public newProduct: boolean = false;\n    public editProduct: boolean = false;\n\n    constructor(private myProductsService: ProductsService, private adminService: AdminService,private router: Router) { }\n\n    ngOnInit(): void {\n        store.subscribe(() => {\n            this.user = store.getState().user;\n        });\n        this.myProductsService.getAllProducts()\n            .subscribe(res => this.products = res, err => alert(err.message));\n        this.adminService.getAllCategories()\n            .subscribe(res => this.categories = res, err => alert(err.message));\n    }\n\n    // public addProduct(): void {\n    //     if (!this.product.img) {\n    //         alert('You have to upload image !');\n    //         return;\n    //     }\n    //     const myForm: FormData = new FormData();\n    //     myForm.append('image', this.product.img);\n    //     myForm.append('product', JSON.stringify(this.product));\n\n    //     this.adminService.addProduct(myForm)\n    //         .subscribe(res => {\n    //             this.products.push(res);\n    //             alert('product has been added !');\n    //             this.goBack();\n    //         }, err => alert(err.message));\n    // }\n\n    public async addProduct(){\n        try{\n            this.adminService.addProduct(this.product);\n            alert('product has been added !');\n            this.router.navigateByUrl(\"/admin\");\n        }\n        catch(err:any){\n            alert(err.message);\n        }\n    }\n\n\n\n\n    public updateImg(event: any): void {\n        this.product.img = event.target.files[0];\n    }\n\n    public goToEditProduct(_id: string): void {\n        this.editProduct = true;\n        const selectedProduct = this.products.find(p => p._id === _id);\n        this.product = selectedProduct;\n    }\n\n    public goToAddProduct(): void {\n        this.newProduct = true;\n    }\n\n\n\n    public updateProduct(): void {\n        const myForm: FormData = new FormData();\n        myForm.append('image', this.product.img);\n        myForm.append('product', JSON.stringify(this.product));\n\n        this.adminService.updateProduct(myForm)\n            .subscribe(res => {\n                const index = this.products.findIndex(product => product._id === res._id);\n                this.products[index] = res;\n                alert('product has been updated!');\n                this.goBack();\n            }, err => alert(err.message))\n    }\n\n    public goBack(): void {\n        this.newProduct = false;\n        this.editProduct = false;\n        this.product = new ProductModel();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}